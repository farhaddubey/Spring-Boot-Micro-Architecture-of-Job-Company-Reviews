#Using the profile concept
job-service.url=http://job:8082
company-service.url=http://company:8083
review-service.url=http://8082

spring.application.name=knights
server.port=8082


# H2 Database
# spring.h2.console.enabled=true
# spring.datasource.url=jdbc:h2:mem:test
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update

# PostgreSQL
spring.datasource.url=jdbc:postgresql://postgres:5432/job
# inplace of localhost we names as according to container name 
spring.datasource.username=postgres
spring.datasource.password=jMa1@*#me
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# Eureka 
eureka.client.serviceUrl.defaultZone=http://servicereg:8761/eureka/
# inplace of localhost we names as according to container name  service-registry
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


# Zipkin properties 
management.tracing.sampling.probability=1.0
management.Zipkin.tracing.endpoint=http://zipkin:9411/api/v2/
# 1 as in test mode we want tracing over all the mode 


#from where our microservices will fetch We need to fetch that 
# config server's address 
# spring.config.import=optional:configsesrver:http://localhost:8080/
spring.config.import=optional:configsesrver:http://config-server:8080/

spring.profile.active=dev

# Elborating Actuator health details 
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always


#Resiliende 4J
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.companyBreaker.max-attempts=5
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration=2s


resilience4j.ratelimiter.instances.companyBreaker.timout-duration= 0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period= 0
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period= 0


# Actuator Configuration
management.health.circuitbreakers.enabled=true
management.endpoint.web.exposure.include=health
# management.endpoint.health.show-details=always


# RabbitMQ 
spring.rabbitmq.host = localhost
spring.rabbitmq.port = 5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest 